@using Pokemon.Dashboard.Model
@using Pokemon.Dashboard.Services
@inject PokemonService pokemonService

@code {
    [Parameter] public string pokemonName { get; set; } = "pikachu";
    private Pokemon? _pokemon;

    protected override async Task OnInitializedAsync()
    {
        _pokemon = await pokemonService.GetPokemonAsync(pokemonName);
    }
}

<MudCard Class="flip-card">
    <div class="flip-card-inner">
        <!-- Vorderseite -->
        <div class="flip-card-front">
            @if (_pokemon != null)
            {
                <div class="front-content">
                    <img src="@_pokemon.sprites?.front_default" alt="@_pokemon.name" />
                    <h3>@_pokemon.name</h3>
                </div>
            }
            else
            {
                <p>Pokémon wird geladen...</p>
            }
        </div>

        <!-- Rückseite -->
        
        
            <div class="flip-card-back">
            @if (_pokemon != null)
            {
                <div class="back-content">
                    <div class="info">
                        <p>Höhe: @_pokemon.height</p>
                        <p>Gewicht: @_pokemon.weight</p>
                        <p>Fähigkeiten:</p>
                        <ul>
                            @foreach (var ability in _pokemon.abilities ?? new List<PokemonAbility>())
                            {
                                <li>@ability.ability?.name</li>
                            }
                        </ul>
                        <p>Typen:</p>
                        <ul>
                            @foreach (var type in _pokemon.types ?? new List<PokemonType>())
                            {
                                <li>@type.type?.name</li>
                            }
                        </ul>
                    </div>
    
                </div>
            }
            else
            {
                <p>Pokémon wird geladen...</p>
            }
        </div>
    </div>
</MudCard>

<style>
    .flip-card {
        perspective: 800px;
        width: 150px;
        height: 250px;
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.6s;
        transform-style: preserve-3d;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        padding: 10px;
    }

    .flip-card-front {
        background-color: #20B2AA;
    }

    .flip-card-back {
        background-color: #f8f9fa;
        /*display: flex;*/
        /*flex-direction:  column;*/
        /*justify-content: center;*/
        transform: rotateY(180deg);
    }

    .front-content img, .back-content .image img {
        max-width: 100%;
        height: auto;
        object-fit: contain;
    }

    .front-content h3, 
    .back-content p {
        color: black;
       
    }

    .back-content .info {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
    }

</style>

