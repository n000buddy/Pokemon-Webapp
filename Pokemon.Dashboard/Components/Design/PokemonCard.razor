@using Pokemon.Dashboard.Model
@using Pokemon.Dashboard.Services
@inject PokemonService pokemonService

@code {
    [Parameter] public string pokemonName { get; set; } = "pikachu";
    private Pokemon? _pokemon;

    protected override async Task OnInitializedAsync()
    {
        _pokemon = await pokemonService.GetPokemonAsync(pokemonName);
    }
}
<MudCard Class="flip-card">
    <div class="flip-card-inner">
        <!-- Frontsite  -->
        <div class="flip-card-front">
            @if (_pokemon != null)
            {
                <div class="front-content">
                    <img src="@_pokemon.sprites?.front_default" alt="@_pokemon.name" />
                    <h3>@_pokemon.name</h3>
                </div>
            }
            else
            {
                <p>Pokémon are Loading...</p>
            }
        </div>
        <!-- Backsite -->
            <div class="flip-card-back">
            @if (_pokemon != null)
            {
                <div class="back-content">
                    <div class="info">
                        <p>Hight: @_pokemon.height</p>
                        <p>Weight: @_pokemon.weight</p>
                        <p>Capabilities:</p>
                        <ul>
                            @foreach (var ability in _pokemon.abilities ?? new List<PokemonAbility>())
                            {
                                <li>@ability.ability?.name</li>
                            }
                        </ul>
                        <p>Typ:</p>
                        <ul>
                            @foreach (var type in _pokemon.types ?? new List<PokemonType>())
                            {
                                <li>@type.type?.name</li>
                            }
                        </ul>
                    </div>
    
                </div>
            }
            else
            {
                <p>Pokémon are Loading...</p>
            }
        </div>
    </div>
</MudCard>

<style>
    .flip-card {
        perspective: 1000px;
        width: 250px;
        height: 300px;
        border-radius: 15px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        overflow: hidden;
        transition: transform 0.3s, box-shadow 0.3s;
    }

    .flip-card:hover {
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
    }
    
    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.6s;
        transform-style: preserve-3d;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
    }

    .flip-card-front, .flip-card-back {
        position: absolute;
        width: 100%;
        height: 100%;
        backface-visibility: hidden;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        padding: 15px;
        border-radius: 15px;
    }

    .flip-card-front {
        background: linear-gradient(135deg, #20B2AA, #2E8B57);
        color: white;
    }

    .flip-card-back {
        background: linear-gradient(135deg, #f8f9fa, #e0e0e0);
        transform: rotateY(180deg);
        color: #1f1e06;
    }

    .front-content img, .back-content .image img {
        max-width: 100%;
        height: auto;
        object-fit: contain;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .front-content h3 {
        margin-top: 10px;
        font-size: 1.5rem;
        font-weight: bold;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
    }

    .back-content p, 
    .back-content ul {
        margin: 5px 0;
        font-size: 0.9rem;
    }

    .back-content ul {
        padding-left: 20px;
        list-style-type: circle /* Use circle for bullet points */
    }

    .back-content .info {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        gap: 5px; /* Adjust gap between items */
    }
</style>